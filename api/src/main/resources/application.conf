api.baseUrl = "http://localhost:8080"
api.baseUrl = ${?API_URL}

stage = "DEV"
stage = ${?STAGE}

stageLower = "dev"
stageLower = ${?STAGE_LOWER}

aws.s3.incoming = com-gu-avatar-incoming-${stageLower}
api.s3.incoming = ${?S3_INCOMING}

aws.s3.raw = com-gu-avatar-raw-${stageLower}
aws.s3.raw = ${?S3_RAW}

aws.s3.processed = com-gu-avatar-processed-${stageLower}
aws.s3.processed = ${?S3_PROCESSED}

aws.s3.public = com-gu-avatar-origin-${stageLower}
aws.s3.public = ${?S3_PUBLIC}

aws.dynamodb.table = avatar-${stageLower}
aws.dynamodb.table = ${?DYNAMO_TABLE}

aws.sns.topic.arn = "arn:aws:sns:eu-west-1:082944406014:avatars-DEV"
aws.sns.topic.arn = ${?SNS_TOPIC_ARN}

aws.sqs.deleted.url = "https://sqs.eu-west-1.amazonaws.com/082944406014/avatar-user-deletion-queue-CODE"
aws.sqs.deleted.url = ${?SQS_DELETED_URL}

aws.region = "eu-west-1"
aws.region = ${?REGION}

api.keys = "dev" // comma-separated-list, as env vars are always interpreted as strings in HOCON
api.keys = ${?API_KEYS}

akka {
  blocking-operations {
    executor = "thread-pool-executor"
    throughput = 10
    thread-pool-executor {
      fixed-pool-size = 128
    }
  }
}
